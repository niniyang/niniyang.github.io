{"meta":{"title":"(ˇˍˇ) ～","subtitle":null,"description":"in the name of mask...","author":"niniY","url":"https://niniyang.github.io"},"pages":[{"title":"","date":"2017-06-16T06:14:51.153Z","updated":"2017-04-28T06:31:52.454Z","comments":true,"path":"about/index.html","permalink":"https://niniyang.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2017-06-16T06:14:51.154Z","updated":"2017-04-28T06:55:02.869Z","comments":true,"path":"categories/index.html","permalink":"https://niniyang.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2017-06-16T06:14:51.151Z","updated":"2017-04-28T06:55:42.258Z","comments":true,"path":"tags/index.html","permalink":"https://niniyang.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"HTTP学习笔记","slug":"HTTP学习笔记","date":"2015-05-06T08:17:16.000Z","updated":"2017-06-21T03:15:38.249Z","comments":true,"path":"2015/05/06/HTTP学习笔记/","link":"","permalink":"https://niniyang.github.io/2015/05/06/HTTP学习笔记/","excerpt":"前言基本每天都在用HTTP，可是对HTTP又感觉很陌生，最近比较闲，就了解整理点笔记。 关于HTTP重温一下大学学过的差不多已经忘记的一点概念 = =|||Internet四层网络协议模型（也叫TCP/IP四层模型），包括：数据链路层，网络层、传输层和应用层。网络层最著名的协议：IP协议。传输层最著名的协议：TCP协议、UDP协议。应用层协议较多：如FTP协议，POP协议，SMTP协议，DNS协议，TELENT协议，以及今天学习的HTTP协议等。","text":"前言基本每天都在用HTTP，可是对HTTP又感觉很陌生，最近比较闲，就了解整理点笔记。 关于HTTP重温一下大学学过的差不多已经忘记的一点概念 = =|||Internet四层网络协议模型（也叫TCP/IP四层模型），包括：数据链路层，网络层、传输层和应用层。网络层最著名的协议：IP协议。传输层最著名的协议：TCP协议、UDP协议。应用层协议较多：如FTP协议，POP协议，SMTP协议，DNS协议，TELENT协议，以及今天学习的HTTP协议等。 概念（来自百度百科）超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。所有的WWW文件都必须遵守这个标准。 HTTP是一个客户端和服务器端请求和应答的标准（TCP）。客户端是终端用户，服务器端是网站。通过使用Web浏览器、网络爬虫或者其它的工具，客户端发起一个到服务器上指定端口（默认端口为80）的HTTP请求。 how it works？基于HTTP协议的客户/服务器模式的信息交换过程，它分四个过程：建立连接、发送请求信息、发送响应信息、关闭连接。123客户端发起请求，与服务器端完成“TCP三次握手”客户端向服务器端发出“HTTP请求报文”客户端与服务器端完成“TCP四次分手” HTTP协议本身是一种无状态的协议，即每一个HTTP报文不依赖于其前面的报文状态。 URLHTTP协议中的URL主要是用于定位服务器端资源的位置，定义如下123456http://host[:port][path]http:// 表示我们要使用HTTP协议；host 表示一个可用的域名或IP地址；port 为可选，表示要请求的端口号，缺省情况下为80path 为可选，表示要请求的资源所在的路径（也叫URI），缺省情况下为/ 报文格式请求报文格式：请求行 － 通用信息头 － 请求头 － 实体头 － 报文主体响应报文格式：状态行 － 通用信息头 － 响应头 － 实体头 － 报文主体 HTTP请求报文方法12345678GET方法：请求某资源POST方法：请求某资源的同时附上一些数据HEAD方法：请求某资源对应的响应报文头PUT方法：上传一个资源DELETE方法：删除一个资源TRACE方法：让服务器回送请求报文，用于调试和排障OPTIONS：请求服务器性能信息CONNECT：预留给代理服务器所用 HTTP状态码状态码共分五种，总共只有三位，第一位表示状态类别。123451xx：是进度通知类状态，意思就是说“请求我已经收到了，或你的请求我正在处理”；2xx：表示“你的请求我已经成功处理了”；3xx：即重定向，也就是服务器告诉客户端“你要的资源搬家了，你到某某地方再去找他吧”；4xx：客户端发来的响应报文里有些错误，比如语法错误或请求的资源不存在等；5xx：服务器端有些问题，已经无法处理完成你的请求了。 列举：1234567891011200 OK：客户端请求成功了，客户端要的东西就在响应报文里了；301 Moved Permanently：客户端啊，你要请求的资源已经永久的搬家了，我把他的新地址放到了Location头部域中了；302 Moved Temporarily：客户端啊，你要请求的资源临时有事去别的地方了，我把他的位置放到了Location头部域中了，你可以先去那里找他，不过他应该是会回到他自己的家的；304 Not Modified：客户端啊，你要请求的资源自从上次你请求之后，就再也没有改动过，我想你是应该早就有这个资源了，所以在响应报文的数据部分我也没有再放这个资源。400 Bad Request：客户端发来的请求报文里有语法错误，服务器端实在看不懂了；401 Unauthorized：客户端发来的请求不是合法来源的请求，也就是这个客户端是没有被授权的；403 Forbidden：服务器端顺利收到了客户端的请求，但是因为某些理由，服务器端拒绝为他提供服务；404 Not Found：客户端要请求的资源不存在，八成是资源地址写错了；500 Internal Server Error：很遗憾，服务器不能给你提供服务了，服务器内部出现了不可预知的问题了；502 Bad Gateway：客户端你好，我是请求报文的代理服务器，持有资源的那个服务器在给我发送资源时出问题了；503 Server Unavailable：服务器现在可能是太忙了，暂时不能给你这个客户端提供服务了，或许稍后会恢复。 详细截图： HTTP版本123456789100.9 已过时。只接受 GET 一种请求方法，没有在通讯中指定版本号，且不支持请求头。由于该版本不支持 POST 方法，所以客户端无法向服务器传递太多信息。HTTP/1.0 这是第一个在通讯中指定版本号的HTTP 协议版本，至今仍被广泛采用，特别是在代理服务器中。HTTP/1.1 当前版本。持久连接被默认采用，并能很好地配合代理服务器工作。还支持以管道方式同时发送多个请求，以便降低线路负载，提高传输速度。HTTP/1.1相较于 HTTP/1.0 协议的区别主要体现在：1 缓存处理2 带宽优化及网络连接的使用3 错误通知的管理4 消息在网络中的发送5 互联网地址的维护6 安全性及完整性 一些高级用法mark（copy from http://roclinux.cn/?p=3450）1234567891011121314151617181920212223242526271 HTTP1.1中，我们可以在报文中使用Cache-Control域来控制缓存策略；而在HTTP1.0中则可以使用Pragma域来控制。为了确保达到效果，我们往往会在HTTP报文中同时设置Cache-Control:no-cache和Pragma:no-cache2 在请求报文中，我们可以设置Accept头部域来指明客户端希望接受哪些类型的数据，比如Accept:image/gif，则表明客户端希望接收gif图片数据。当然我们可以设置很多种可接受的类型。3 在请求报文中，Accept-Charset则是用来设置客户端希望接受的字符集。4 在请求报文中，Accept-Encoding则是用来指定客户端希望接受的编码类型。5 在请求报文中，Accept-Language是指明客户端希望接受的语言类型，例如Accept-Language:zh-cn，表明客户端希望得到中文的内容6 在请求报文中，If-Modified-Since域用作缓存策略。具体的原理是这样的，浏览器本地会缓存一些数据，包括网页、图片等，而且还会同时存储这些缓存数据在服务器端的最后修改时间（Last-Modified）。当浏览器再向服务器端发起这些数据的请求时，会同时把这些数据的最后修改时间通过If-Modified-Since一起传给服务器端，服务器端一旦看到这个头部域，就会先拿这个时间戳和相应资源的最后修改时间比较下，如果相同，就说明这个资源一直以来都没有改动过，于是服务器端就不用再把这个数据重复的传给客户端了，而是直接在响应报文中返回304即可，避免了重复传输带来的带宽消耗。7 有些同学会感觉疑惑，为什么Last-Modified和If-Modified-Since域都是存储“最后修改时间”的，有啥区别呢。他俩的区别在于，Last-Modified域是响应报文中使用的，由服务器端发给客户端的；而If-Modified-Since则是用在请求报文中的，由客户端发给服务器端的。这两者都是用绝对时间来表示的，所以存在时间同步的问题。那有没有更好的解决办法呢，请继续往下看：）8 为大家隆重推出Etags和If-None-Match这一对兄弟，他俩的关系和“Last-Modified/If-Modified-Since”的关系一样，Etags（Entity Tags）是用于响应报文中的，而If-None-Match是用于请求报文中的。这对兄弟的好处在于，他们不是以绝对时间来判断数据是否被修改过，而是通过数据的某个属性值来判断，例如数据的MD5值，这样就可以很好的避免时间不同步的问题了。（除了If-None-Match外，请求报文的头部域中还可以用If-Match、If-Range来表示希望获取的Etag值）9 在响应报文中，可以使用Location头部域来实现重定向，比如更换了域名之后。10 在HTTP协议里，除了Etags/if-None-Match，Last-Modified/If-Modified-Since外，还有两对这样的兄弟，其一是Server/User-Agent，Server是服务器端用来亮明身份的，而User-Agent是客户端用来亮明身份的；另一对是Set-Cookie和Cookie，Set-Cookie用于服务器端向客户端设置cookie的，而Cookie则是客户端告诉服务器端自己的cookie的。11 在响应报文中，服务器端可以使用Expires域来告诉客户端最多缓存这个数据到什么时间，如果超过这个时间点的话，客户端就不要再缓存这个数据了，而是向服务器端重新发起新的请求。12 在响应报文中，服务器端可以使用Set-Cookie头部域向客户端设置cookie。其语法很简单，就是由多个name=value组成的，由分号间隔。例如：Set-Cookie: ASPSESSIONIDQAQBQQQB=BEJCDGKADEDJKLKKAJEOIMMH; path=/13 在响应报文中，X-Powered-By头部域表示服务器端使用到的技术名称，例如X-Powered-By: ASP.NET","categories":[{"name":"计算机网络协议","slug":"计算机网络协议","permalink":"https://niniyang.github.io/categories/计算机网络协议/"}],"tags":[{"name":"HTTP","slug":"HTTP","permalink":"https://niniyang.github.io/tags/HTTP/"},{"name":"协议","slug":"协议","permalink":"https://niniyang.github.io/tags/协议/"}]},{"title":"虚拟机中ubuntu设置分辨率","slug":"虚拟机中ubuntu设置分辨率","date":"2015-04-26T08:17:16.000Z","updated":"2017-06-20T10:14:37.454Z","comments":true,"path":"2015/04/26/虚拟机中ubuntu设置分辨率/","link":"","permalink":"https://niniyang.github.io/2015/04/26/虚拟机中ubuntu设置分辨率/","excerpt":"前言刚装完ubuntu虚拟机系统的分辨率小的有点…让人难受，想要调整成自己想要的分辨率，而ubuntu里面又没有。 自定义分辨率1.输入：$ cvt 1600 900 返回结果如图：","text":"前言刚装完ubuntu虚拟机系统的分辨率小的有点…让人难受，想要调整成自己想要的分辨率，而ubuntu里面又没有。 自定义分辨率1.输入：$ cvt 1600 900 返回结果如图： 2.查看显示器名称1输入：$ xrandr 如图： 以上，看到显示器名称：Virtual1。 3.设置分辨率 12$ sudo xrandr --newmode \"1600x900_60.00\" 118.25 1600 1696 1856 2112 900 903 908 934 -hsync +vsync$ sudo xrandr --addmode Virtual1 \"1600x900_60.00\" 4.设置1600*900分辨率系统设置-&gt;显示-&gt;分辨率（选择1600x900）-&gt;应用如下图： 5.保存分辨率重启后，以上分辨率又会失效，保存一下上面两个命令。 1输入：$ sudo gedit /etc/profile 文章末尾加上上面两条命令，保存。如图： 6.restart and over… ^_^","categories":[{"name":"linux","slug":"linux","permalink":"https://niniyang.github.io/categories/linux/"}],"tags":[{"name":"ubuntu","slug":"ubuntu","permalink":"https://niniyang.github.io/tags/ubuntu/"},{"name":"linux","slug":"linux","permalink":"https://niniyang.github.io/tags/linux/"},{"name":"虚拟机","slug":"虚拟机","permalink":"https://niniyang.github.io/tags/虚拟机/"}]},{"title":"sublime text全程指南","slug":"sublime text全程指南","date":"2014-12-25T02:33:22.000Z","updated":"2017-06-19T06:53:29.425Z","comments":true,"path":"2014/12/25/sublime text全程指南/","link":"","permalink":"https://niniyang.github.io/2014/12/25/sublime text全程指南/","excerpt":"","text":"参考博客推荐博客","categories":[{"name":"配置","slug":"配置","permalink":"https://niniyang.github.io/categories/配置/"}],"tags":[{"name":"sublime text","slug":"sublime-text","permalink":"https://niniyang.github.io/tags/sublime-text/"}]},{"title":"xml,array的转换","slug":"xml,array转换","date":"2014-07-11T06:14:47.000Z","updated":"2017-06-16T08:54:00.699Z","comments":true,"path":"2014/07/11/xml,array转换/","link":"","permalink":"https://niniyang.github.io/2014/07/11/xml,array转换/","excerpt":"","text":"12345678910111213141516171819202122232425//xml转为arraypublic function xmlToArray($xml)&#123; $xml=simplexml_load_string($xml, 'SimpleXMLElement', LIBXML_NOCDATA); $array_data = json_decode(json_encode($xml), true); return $array_data;&#125;//array转xmlpublic function arrayToXml($arr)&#123; $xml = \"&lt;xml&gt;\"; foreach ($arr as $key=&gt;$val) &#123; if (is_numeric($val)) &#123; $xml.=\"&lt;\".$key.\"&gt;\".$val.\"&lt;/\".$key.\"&gt;\"; &#125; else $xml.=\"&lt;\".$key.\"&gt;&lt;![CDATA[\".$val.\"]]&gt;&lt;/\".$key.\"&gt;\"; &#125; $xml.=\"&lt;/xml&gt;\"; return $xml;&#125;","categories":[{"name":"php","slug":"php","permalink":"https://niniyang.github.io/categories/php/"}],"tags":[{"name":"array","slug":"array","permalink":"https://niniyang.github.io/tags/array/"},{"name":"xml","slug":"xml","permalink":"https://niniyang.github.io/tags/xml/"}]},{"title":"MySQL运行状态show status中文详解","slug":"MySQL运行状态show status中文详解","date":"2014-06-05T06:45:47.000Z","updated":"2017-06-16T08:47:12.727Z","comments":true,"path":"2014/06/05/MySQL运行状态show status中文详解/","link":"","permalink":"https://niniyang.github.io/2014/06/05/MySQL运行状态show status中文详解/","excerpt":"要优化MySQL运行效率都少不了要运行show status查看各种状态，下面的这个表是参考官方文档及网上资料整理出来的show status中文详细解释，存档方便以后查阅。","text":"要优化MySQL运行效率都少不了要运行show status查看各种状态，下面的这个表是参考官方文档及网上资料整理出来的show status中文详细解释，存档方便以后查阅。 状态名 作用域 详细解释 Aborted_clients Global 由于客户端没有正确关闭连接导致客户端终止而中断的连接数 Aborted_connects Global 试图连接到MySQL服务器而失败的连接数 Binlog_cache_disk_use Global 使用临时二进制日志缓存但超过binlog_cache_size值并使用临时文件来保存事务中的语句的事务数量 Binlog_cache_use Global 使用临时二进制日志缓存的事务数量 Bytes_received Both 试图连接到MySQL服务器而失败的连接数 Bytes_sent Global 从所有客户端接收到的字节数。 com* 各种数据库操作的数量 Compression Session 客户端与服务器之间只否启用压缩协议 Connections Global 试图连接到(不管是否成功)MySQL服务器的连接数 Created_tmp_disk_tables Both 服务器执行语句时在硬盘上自动创建的临时表的数量 Created_tmp_files Global mysqld已经创建的临时文件的数量 Created_tmp_tables Both 服务器执行语句时自动创建的内存中的临时表的数量。如果Created_tmp_disk_tables较大，你可能要增加tmp_table_size值使临时 表基于内存而不基于硬盘 Delayed_errors Global 用INSERT DELAYED写的出现错误的行数(可能为duplicate key)。 Delayed_insert_threads Global 使用的INSERT DELAYED处理器线程数。 Delayed_writes Global 写入的INSERT DELAYED行数 Flush_commands Global 执行的FLUSH语句数。 Handler_commit Both 内部提交语句数 Handler_delete Both 行从表中删除的次数。 待续。。。","categories":[{"name":"database","slug":"database","permalink":"https://niniyang.github.io/categories/database/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://niniyang.github.io/tags/MySQL/"}]},{"title":"MySQL .sql文件导入导出","slug":"MySQL sql文件导入导出","date":"2014-05-11T06:14:47.000Z","updated":"2017-06-16T08:21:21.050Z","comments":true,"path":"2014/05/11/MySQL sql文件导入导出/","link":"","permalink":"https://niniyang.github.io/2014/05/11/MySQL sql文件导入导出/","excerpt":"经常要导入导出数据量庞大的数据，经常要超时！！！身为菜鸟心好累，ORZ…于是那啥..从同事那里偷到了一点技艺..嗯~~~ (ˇˍˇ) ～ windows下","text":"经常要导入导出数据量庞大的数据，经常要超时！！！身为菜鸟心好累，ORZ…于是那啥..从同事那里偷到了一点技艺..嗯~~~ (ˇˍˇ) ～ windows下 连接数据库12连接：mysql -h主机地址 -u用户名 －p用户密码 （注:u与root可以不用加空格，其它也一样） 断开：exit （回车） 导入数据库123456常用source 命令进入mysql数据库控制台，如mysql -u root -pmysql&gt;use 数据库然后使用source命令，后面参数为脚本文件(如这里用到的.sql)mysql&gt;source d:/dbname.sql","categories":[{"name":"database","slug":"database","permalink":"https://niniyang.github.io/categories/database/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://niniyang.github.io/tags/MySQL/"}]},{"title":"Windows中cmd操作mysql","slug":"Windows中cmd操作MySQL","date":"2014-05-11T06:10:47.000Z","updated":"2017-06-16T08:47:17.650Z","comments":true,"path":"2014/05/11/Windows中cmd操作MySQL/","link":"","permalink":"https://niniyang.github.io/2014/05/11/Windows中cmd操作MySQL/","excerpt":"打开CMD将工作目录切换到MySQL的bin下mysql -u root -p输入密码即可登陆MySQL问号可以查看帮助首先需要选择操作的数据库use database_name然后可以进行select等操作需要注意的是，操作要记得分号结尾如果忘记输入分号可以用\\c来结束命令输入常见的操作如下表","text":"打开CMD将工作目录切换到MySQL的bin下mysql -u root -p输入密码即可登陆MySQL问号可以查看帮助首先需要选择操作的数据库use database_name然后可以进行select等操作需要注意的是，操作要记得分号结尾如果忘记输入分号可以用\\c来结束命令输入常见的操作如下表 连接：mysql -h主机地址 -u用户名 －p用户密码 （注:u与root可以不用加空格，其它也一样）断开：exit （回车） 创建授权：grant select on 数据库. to 用户名@登录主机 identified by \\”密码\\”修改密码：mysqladmin -u用户名 -p旧密码 password 新密码删除授权: revoke select,insert,update,delete om .* from test2@localhost; 显示数据库：show databases;显示数据表：show tables;显示表结构：describe 表名; 创建库：create database 库名;删除库：drop database 库名;使用库：use 库名; 创建表：create table 表名 (字段设定列表);删除表：drop table 表名;修改表：alter table t1 rename t2查询表：select * from 表名;清空表：delete from 表名;备份表: mysqlbinmysqldump -h(ip) -uroot -p(password) databasename tablename &gt; tablename.sql恢复表: mysqlbinmysql -h(ip) -uroot -p(password) databasename tablename &lt; tablename.sql（操作前先把原来表删除） 增加列：ALTER TABLE t2 ADD c INT UNSIGNED NOT NULL AUTO_INCREMENT,ADD INDEX (c);修改列：ALTER TABLE t2 MODIFY a TINYINT NOT NULL, CHANGE b c CHAR(20);删除列：ALTER TABLE t2 DROP COLUMN c; 备份数据库：mysql\\bin\\mysqldump -h(ip) -uroot -p(password) databasename &gt; database.sql","categories":[{"name":"database","slug":"database","permalink":"https://niniyang.github.io/categories/database/"}],"tags":[{"name":"MySQL","slug":"MySQL","permalink":"https://niniyang.github.io/tags/MySQL/"}]},{"title":"firefox config","slug":"firefox_config","date":"2014-05-11T05:39:47.000Z","updated":"2017-06-16T08:42:59.566Z","comments":true,"path":"2014/05/11/firefox_config/","link":"","permalink":"https://niniyang.github.io/2014/05/11/firefox_config/","excerpt":"火狐打开经常巨慢，网上收集了一些设置，确实快了很多，在火狐地址栏中输入：about:config进入配置： 1.限制页面快进/快退功能中保存的页面总数(默认值是-1表示无限页) 在过滤器栏输入：browser.sessionhistory.max_total_viewers，双击该项，修改值为0。","text":"火狐打开经常巨慢，网上收集了一些设置，确实快了很多，在火狐地址栏中输入：about:config进入配置： 1.限制页面快进/快退功能中保存的页面总数(默认值是-1表示无限页) 在过滤器栏输入：browser.sessionhistory.max_total_viewers，双击该项，修改值为0。 2.让火狐在最小化时自动释放内存 右击鼠标－新建－布尔（boolean)项，输入：config.trim_on_minimize,并设置为true。做了这两个设置后火狐速度就快多了，在开了一排页面的情况下，也就23M的内存占用,最小化后只占5M内存。 3.禁用ipv6解析 找到network.http.proxy.pipelining，点击右键，“切换”其值成 true，找到network.dns.disableIPv6 ，右键，切换，值变为true。 4.右键点击FireFox的快捷方式 右键点击FireFox的快捷方式，在“属性”—“快捷方式”—“目标”，加上参数“ /Prefetch:1”。即：”C:Program FilesMozilla Firefox\\firefox.exe” /Prefetch:1（注意：“/”前有空格） 5.让火狐在后台打开新页面，您继续浏览当前页 找到browser.tabs.loadDivertedInBackground的值切换true。 6.让火狐一次发送多个个请求 找到network.http.pipelining，点击右键，“切换”其值成 true，找到network.http.pipelining.maxrequests并把它的值改的高一些，例如改成30(请求个数)。 7.让火狐快速对网站回复信息反应 点右键，选择 “新建”—“整数”在弹出的对话框中输入 nglayout.initialpaint.delay并将其值改为“0” 8.关闭其他扩展插件法、去掉skin和Theme、取消自动更新等等方法","categories":[{"name":"browsers","slug":"browsers","permalink":"https://niniyang.github.io/categories/browsers/"}],"tags":[{"name":"firefox","slug":"firefox","permalink":"https://niniyang.github.io/tags/firefox/"}]},{"title":"导入SQL大文件超时","slug":"导入SQL大文件超时","date":"2014-04-29T08:17:16.000Z","updated":"2017-06-16T08:42:51.709Z","comments":true,"path":"2014/04/29/导入SQL大文件超时/","link":"","permalink":"https://niniyang.github.io/2014/04/29/导入SQL大文件超时/","excerpt":"","text":".sql文件太大，导入时报错如下：Error Code: 2006 - MySQL server has gone away. 原因：配置文件中的max_allowed_packet不够大。 解决：12# 直接用SQL语句：SET GLOBAL max_allowed_packet=67108864;","categories":[{"name":"database","slug":"database","permalink":"https://niniyang.github.io/categories/database/"}],"tags":[{"name":"database","slug":"database","permalink":"https://niniyang.github.io/tags/database/"}]},{"title":"hexo主题配置详细说明","slug":"config-yml-theme-zh","date":"2014-04-26T08:17:16.000Z","updated":"2017-06-19T07:19:54.714Z","comments":true,"path":"2014/04/26/config-yml-theme-zh/","link":"","permalink":"https://niniyang.github.io/2014/04/26/config-yml-theme-zh/","excerpt":"describe _config.yml（theme）","text":"describe _config.yml（theme） 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137# ---------------------------------------------------------------# Site Information Settings# ---------------------------------------------------------------# Header Menumenu: Home: / Archives: archives Categories: categories Tags: tags About: about## 按照以下操作进行分类、标签## you can create `tags` and `categories` folders in `../source`.## And create a `index.md` file in each of them.## set `front-matter`as## layout: tags (or categories)## title: tags (or categories)## ---rss: /atom.xmlsince: 2013# Set default keywords (Use a comma to separate)keywords: \"\"# Put your favicon.ico or avatar.jpg into `hexo-site/themes/hiker/source/` directory.avatar: enable: true border: true width: 124 height: 124 top: 0 url: css/images/cute.jpg (public文件夹下)# Homepage# eg. home_background_image: [css/images/home-bg.jpg, http://t.cn/RMbvEza]home_background_image: enable: true url: [css/images/poke.jpg, http://t.cn/RMbvEza] (public文件夹下)home_logo_image: enable: false border: false url: css/images/homelogo.jpg (public文件夹下)# AboutPage backgroundabout_big_image: css/images/poke.jpg (public文件夹下)# Archive paginationarchive_pagination: true# Contentfancybox: true# Sidebarsidebar: rightwidgets:- category- tag- tagcloud- archive- recent_posts# Searchsearch: insight: true # you need to install `hexo-generator-json-content` before using Insight Search swiftype: # enter swiftype install key here baidu: false # you need to disable other search engines to use Baidu search, options: true, false# comment ShortName, you can choose only ONE to display.duoshuo_shortname: niniYdisqus_shortname:# Code Highlight theme# Available value:# default | normal | night | night eighties | night blue | night bright# https://github.com/chriskempson/tomorrow-themehighlight_theme: default# Article theme color# Available value:# random | orange | blue | red | green | blacktheme_color: random# display widgets at the bottom of index pages (pagination == 2)index_widgets:# - category# - tagcloud# - archive# widget behaviorarchive_type: 'monthly'show_count: true# Google Webmaster tools verification setting# See: https://www.google.com/webmasters/google_site_verification:baidu_site_verification:qihu_site_verification:# Miscellaneousgoogle_analytics:gauges_analytics:baidu_analytics:tencent_analytics:twitter:google_plus:fb_admins:fb_app_id:# Facebook SDK Support.# https://github.com/iissnan/hexo-theme-next/pull/410facebook_sdk: enable: false app_id: #&lt;app_id&gt; fb_admin: #&lt;user_id&gt; like_button: #true webmaster: #true# CNZZ countcnzz_siteid: 1260716016# busuanzi count# http://busuanzi.ibruce.info/show_busuanzi_view_counts: true","categories":[{"name":"配置","slug":"配置","permalink":"https://niniyang.github.io/categories/配置/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://niniyang.github.io/tags/hexo/"}]},{"title":"hexo配置详细说明","slug":"config-yml-zh","date":"2014-04-26T08:17:16.000Z","updated":"2017-06-19T09:15:19.031Z","comments":true,"path":"2014/04/26/config-yml-zh/","link":"","permalink":"https://niniyang.github.io/2014/04/26/config-yml-zh/","excerpt":"describe _config.yml","text":"describe _config.yml 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374# Hexo Configuration## Docs: https://hexo.io/docs/configuration.html## Source: https://github.com/hexojs/hexo/# Sitetitle: (ˇˍˇ) ～subtitle:description: noting...author: niniYlanguage: entimezone:# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: https://niniyang.github.io/root: /permalink: :year/:month/:day/:title/permalink_defaults:# Directorysource_dir: sourcepublic_dir: publictag_dir: tagsarchive_dir: archivescategory_dir: categoriescode_dir: downloads/codei18n_dir: :langskip_render:# Writingnew_post_name: :title.md # File name of new postsdefault_layout: posttitlecase: false # Transform title into titlecaseexternal_link: true # Open external links in new tabfilename_case: 0render_drafts: falsepost_asset_folder: falserelative_link: falsefuture: truehighlight: enable: true line_number: true auto_detect: false tab_replace:# Category &amp; Tagdefault_category: uncategorizedcategory_map: 1,2,3,4tag_map: 5,6,7,8# Date / Time format## Hexo uses Moment.js to parse and display date## You can customize the date format as defined in## http://momentjs.com/docs/#/displaying/format/date_format: YYYY-MM-DDtime_format: HH:mm:ss# Pagination## Set per_page to 0 to disable paginationper_page: 10pagination_dir: page# Extensions## Plugins: https://hexo.io/plugins/## Themes: https://hexo.io/themes/theme: hiker# Deployment## Docs: https://hexo.io/docs/deployment.htmldeploy: type: git repository: git@github.com:niniyang/niniyang.github.io.git branch: master 在执行 hexo deploy 后,出现 error deployer not found:github错误，原因可能如下： hexo 更新到3.0之后，deploy的type 的github需要改成git npm install hexo-deployer-git –save 改了之后执行 修改footer显示的内容： 不同主题配置不大一样，但是大抵相同，如下文件目录进行修改： 1/themes/(你的主题)/layout/_partials/footer.***","categories":[{"name":"配置","slug":"配置","permalink":"https://niniyang.github.io/categories/配置/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://niniyang.github.io/tags/hexo/"}]},{"title":"Hexo主题配置","slug":"Hexo theme config","date":"2014-04-25T03:33:22.000Z","updated":"2017-06-19T07:20:08.195Z","comments":true,"path":"2014/04/25/Hexo theme config/","link":"","permalink":"https://niniyang.github.io/2014/04/25/Hexo theme config/","excerpt":"安装主题从GitHub上获取代码，在..\\hexo\\themes目录，Git Bash Here , and excute： 1$ git clone https://github.com/iTimeTraveler/hexo-theme-hiker.git themes/hiker 改变主题把Hexo主目录下的 _config.yml 文件中的字段 theme 修改为 hiker.1theme: hiker","text":"安装主题从GitHub上获取代码，在..\\hexo\\themes目录，Git Bash Here , and excute： 1$ git clone https://github.com/iTimeTraveler/hexo-theme-hiker.git themes/hiker 改变主题把Hexo主目录下的 _config.yml 文件中的字段 theme 修改为 hiker.1theme: hiker 更新主题12$ cd themes/Hiker$ git pull 自定义首页背景图您可以将选择的大图放到 YOUR_HEXO_SITE\\themes\\hiker\\source\\css\\images 文件夹下. 然后更改 hiker/_config.yml文件里的home_background_image字段.123home_background_image: enable: true url: [css/images/poke.jpg, http://t.cn/RMbvEza] 如果url为空（enable仍然保持true）, 主题会自动使用下面这种漂亮的随机线条填充： Ps：顺便补充一下如何在文章中插入图片: 官方文档 Code 色彩主题Hiker 使用Tomorrow Theme 作为代码高亮的配色. 总共有六种选择: default, normal, night, night blue, night bright, night eighties Modify highlight_theme in hiker/_config.yml. 1highlight_theme: default I like the default one,so I don’t modify it. 博客主题色Modify theme_color in hiker/_config.yml. 1theme_color: random 夜间模式只有在文章阅读页面，点击左上角的logo图片，就能打开设置对话框。","categories":[{"name":"配置","slug":"配置","permalink":"https://niniyang.github.io/categories/配置/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://niniyang.github.io/tags/hexo/"}]},{"title":"Hexo + Github Pages","slug":"Hexo + Github Pages","date":"2014-04-25T02:33:22.000Z","updated":"2017-06-16T09:01:32.446Z","comments":true,"path":"2014/04/25/Hexo + Github Pages/","link":"","permalink":"https://niniyang.github.io/2014/04/25/Hexo + Github Pages/","excerpt":"","text":"参考博客http://blog.liuxianan.com/build-blog-website-by-hexo-github.html 折腾上周折腾了一下。。。改天整理部署的时候一直报以下错误，折腾了好久，简直要哭了T_T…差点就放弃了，不甘心又重新我查查查 终于找到了解决方法，如下： 将_config.yml配置文件里的 repository：https://github.com/niniyang/niniyang.github.io.git 改为：git@github.com:niniyang/niniyang.github.io.git 问题解决。 以下省略三千个T_T… 感谢这位知乎网友：Andybroker。","categories":[{"name":"HEXO","slug":"HEXO","permalink":"https://niniyang.github.io/categories/HEXO/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://niniyang.github.io/tags/hexo/"}]},{"title":"Hello World","slug":"hello-world","date":"2014-04-24T03:33:22.000Z","updated":"2017-06-16T08:20:26.273Z","comments":true,"path":"2014/04/24/hello-world/","link":"","permalink":"https://niniyang.github.io/2014/04/24/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}